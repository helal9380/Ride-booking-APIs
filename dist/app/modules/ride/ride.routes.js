"use strict";
/** @format */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RidesRoutes = void 0;
const express_1 = require("express");
const checkAuth_1 = require("../../middlewares/checkAuth");
const validateRequest_1 = require("../../middlewares/validateRequest");
const user_interface_1 = require("../user/user.interface");
const ride_controller_1 = require("./ride.controller");
const ride_validation_1 = require("./ride.validation");
const router = (0, express_1.Router)();
router.post("/request", (0, checkAuth_1.checkAuth)(user_interface_1.Role.RIDER), (0, validateRequest_1.validateRequest)(ride_validation_1.requestRideZodValidation), ride_controller_1.RideContorller.requestRide);
router.get("/me", (0, checkAuth_1.checkAuth)(user_interface_1.Role.RIDER), ride_controller_1.RideContorller.getMyRides);
router.get("/rides", (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER), ride_controller_1.RideContorller.getAssignedRides);
router.get("/", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN), ride_controller_1.RideContorller.getAllRides);
router.get("/earnings", (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER), ride_controller_1.RideContorller.getDriverEarnings);
router.patch("/:id/cancel", (0, checkAuth_1.checkAuth)(user_interface_1.Role.RIDER), ride_controller_1.RideContorller.cancelRide);
router.patch("/:id/accept", (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER), ride_controller_1.RideContorller.acceptRide);
router.patch("/:id/approve", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN), ride_controller_1.RideContorller.approveDriver);
router.patch("/:id/status", (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER), ride_controller_1.RideContorller.updateRideStatus);
exports.RidesRoutes = router;
